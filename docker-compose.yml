version: '3'

services:
  db:
    image: postgres
    environment:
        POSTGRES_DB: db
        POSTGRES_USER: user
        POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
  mq:
    image: rabbitmq:3.6.6-management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=user
    ports:
      - "5672:5672"
      - "15672:15672"
  auth:
    build:
      context: auth
      dockerfile: Dockerfile
    command: >
      sh -c "chmod +x wait-for.sh &&
             ./wait-for.sh db:5432 &&
             ./wait-for.sh mq:5672 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8001"
    volumes:
      - ./auth:/auth
    ports:
      - "8001:8001"
    depends_on:
      - db
      - mq
  notifications:
    build:
      context: notifications
      dockerfile: Dockerfile
    command: >
      sh -c "chmod +x wait-for.sh &&
             ./wait-for.sh mq:5672 &&
             python worker.py"
    depends_on:
      - mq
    ports:
      - "8002:8002"
    volumes:
      - ./notifications:/notifications
  store:
    build:
      context: store
      dockerfile: Dockerfile
    command: >
      sh -c "chmod +x wait-for.sh &&
             ./wait-for.sh auth:8001 &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./store:/store
    ports:
      - "8000:8000"
    depends_on:
      - db
      - auth
  upload:
    build:
      context: upload
      dockerfile: Dockerfile
    command: >
      sh -c "chmod +x wait-for.sh &&
             ./wait-for.sh store:8000 &&
             python manage.py migrate &&
             (python manage.py runserver 0.0.0.0:8003 &
             celery -A upload worker -l info)"
    volumes:
      - ./upload:/upload
    ports:
      - "8003:8003"
    depends_on:
      - mq
      - db
      - store
